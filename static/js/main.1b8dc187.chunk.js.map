{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","popus","react_default","a","createElement","className","concat","mode","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","href","onClick","toggleMode","role","htmlFor","TextForm","props","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newtext","toUpperCase","showAlert","toLowerCase","copyText","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","data-bs-dismiss","defaultProps","aboutText","App","setMode","_useState3","_useState4","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1b8dc187.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\n// import {Link} from 'react-router-dom'\n\nexport default function Navbar(popus) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${popus.mode} bg-${popus.mode}`}>\n    <div className=\"container-fluid\">\n      <a className=\"navbar-brand\">{popus.title}</a>\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n          </li>\n          {/* <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">About</a>\n          </li> */}\n        </ul>\n        <div className={`form-check form-switch text-${popus.mode==='light'?'dark':'light'}`}>\n            <input className=\"form-check-input\" onClick={popus.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n          </div>\n      </div>\n    </div>\n  </nav>\n\n  )\n}\nNavbar.propTypes = { title: PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired }\n\nNavbar.defaultProps = { title: \"Set title here\", aboutText: \"About Text\" }","import React, { useState } from 'react'\n\nexport default function TextForm(props) {\n\n    const handleUpClick = function () {\n        console.log(\"upper case was click\", text)\n\n        let newtext = text.toUpperCase()\n        setText(newtext)\n        props.showAlert(\"Convert to upper case\", \"success\")\n    }\n\n    const handleLoClick = function () {\n        console.log(\"lower case was click\", text)\n\n        let newtext = text.toLowerCase()\n        setText(newtext)\n        props.showAlert(\"Convert to lower case\", \"success\")\n\n    }\n\n    const handleClearText = function () {\n        setText(\"\")\n        props.showAlert(\"text clear \", \"success\")\n\n    }\n\n    const handleCopyText = function () {\n        // Get the text field\n        var copyText = document.getElementById(\"myBox\");\n\n        // Select the text field\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); // For mobile devices\n\n        // Copy the text inside the text field\n        navigator.clipboard.writeText(copyText.value);\n        props.showAlert(\"Copied to clickboard\", \"success\")\n\n    }\n\n    const removeExtraSpace = function () {\n        let newText = text.split(/[ ]+/)\n        setText(newText.join(\" \"))\n        props.showAlert(\"Remove extra spaces\", \"success\")\n\n\n    }\n\n    const handleOnChange = function (event) {\n        console.log('change')\n        setText(event.target.value)\n\n    }\n\n    const [text, setText] = useState(\"Enter text here\");\n\n    return (\n        <>\n            <div className='container' style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{ backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#042743' }} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert into Upper case</button>\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert into Lower case</button>\n                <button className=\"btn btn-primary mx-1\" onClick={handleClearText}>Clear Text</button>\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopyText}>Copy Text</button>\n                <button className=\"btn btn-primary mx-1\" onClick={removeExtraSpace}>Remove Extra Space</button>\n\n\n\n\n\n            </div>\n\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\n                <h1>Your text summary</h1>\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\n                <p>{0.008 * text.split(\" \").length} Minutes read</p>\n                <h2>Preview</h2>\n                <p>{text.length > 0 ? text : \"Enter something in the text box to preview it here\"}</p>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(popus) {\n\n    const capitalize=(word)=>\n    {\n        let lower=word.toLowerCase()\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\n    }\n    return (\n//here we use popus.alert && means by default popus.alert is null.So if it is null then after && all statements is ignored otherwise all statement is run\n          popus.alert &&  <div className={`alert alert-${popus.alert.type} alert-dismissible fade show`} role=\"alert\">\n                <strong>{capitalize(popus.alert.type)}</strong>: {popus.alert.msg}\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n            </div>\n\n        \n    )\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\n// import About from './components/About';\nimport { useState } from 'react';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n// import About from './components/About';\n\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n\n  //now we make a state for alert\n  const [alert, setalert] = useState(null)//here by deafult me make alert as a object\n  //here we show alert\n  const showAlert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    //now here i want after show message by calling showAlert() it remove automatically for the user\n    setTimeout(() => {\n      setalert(null);\n    }, 3000)\n  }\n\n  const toggleMode = () => {\n\n    if (mode === \"light\") {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"#042743\"\n      showAlert(\"Dark mode has been enabled\", \"success\")//here call showAlert method when we click on button\n      document.title = \"Textutils-Light Mode\"\n    }\n    else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\"Light mode has been enabled\", \"success\")//here call showAlert method when we click on button\n      document.title = \"Textutils-Darkr Mode\"\n\n\n\n\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About/> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n\n\n\n\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}